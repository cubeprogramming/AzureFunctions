{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "department": {
      "type": "string",
      "defaultValue": "int",
      "metadata": {
        "description": "Name of department/team that owns, created and maintains the resource."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "qa",
        "prod"
      ],
      "metadata": {
        "description": "The environment that this resource belongs to."
      }
    },
    "solution": {
      "type": "string",
      "defaultValue": "ngdapi",
      "metadata": {
        "description": "The name of the solution that this resource belongs to within the Department."
      }
    },
    "component": {
      "type": "string",
      "metadata": {
        "description": "The name of the component within the solution (function app that you wish to create)"
      }
    },
    "resource": {
      "type": "string",
      "defaultValue": "func",
      "metadata": {
        "description": "The abbrevated name of the Azure Resource/Service ."
      }
    },
    "instance": {
      "type": "string",
      "defaultValue": "-",
      "metadata": {
        "description": "The abbrevated name of the Azure Resource/Service ."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    }
  },
  "variables": {
    "functionomponentString": "[concat('ng-',parameters('department'),'-',parameters('environment'),'-',parameters('solution'),'-',parameters('component'),'-',parameters('resource'),if(equals(parameters('instance'),'-'), '',concat('-',parameters('instance'))) )]",
    "hostingPlanNameString": "[concat('ng-',parameters('department'),'-',parameters('environment'),'-',parameters('solution'),'-',parameters('component'),'-hp',if(equals(parameters('instance'),'-'), '',concat('-',parameters('instance'))) )]",
    "applicationInsightsNameString": "[concat('ng-',parameters('department'),'-',parameters('environment'),'-',parameters('solution'),'-',parameters('component'),'-ins',if(equals(parameters('instance'),'-'), '',concat('-',parameters('instance'))) )]",
    "storageAccountNameString": "[concat('ng',parameters('department'),parameters('environment'),parameters('solution'),parameters('component'),'stg',if(equals(parameters('instance'),'-'), '',parameters('instance')) )]",

    "functionomponent": "[if(greater(length(variables('functionomponentString')), 60), substring(variables('functionomponentString'),0,59),variables('functionomponentString'))]",
    "hostingPlanName": "[if(greater(length(variables('hostingPlanNameString')), 60), substring(variables('hostingPlanNameString'),0,59),variables('hostingPlanNameString'))]",
    "applicationInsightsName": "[if(greater(length(variables('applicationInsightsNameString')), 60), substring(variables('applicationInsightsNameString'),0,59),variables('applicationInsightsNameString'))]",
    "storageAccountName": "[if(greater(length(variables('storageAccountNameString')), 24), substring(variables('storageAccountNameString'),0,23),variables('storageAccountNameString'))]",

    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "functionWorkerRuntime": "[parameters('runtime')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionomponent')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionomponent'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "type": "microsoft.insights/components",
      "location": "East US",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('applicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    }
  ]
}
